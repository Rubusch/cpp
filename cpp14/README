C++ 14

RESOURCES
http://cpprocks.com/an-overview-of-c14-language-features/
http://en.wikipedia.org/wiki/C%2B%2B14



TODO



needs g++-5 installed (debian), in case still in 'sid'

* Another alternative for type inference which will allow you to use decltype
  inference rules for auto variables.
* Aggregate initialization will work for classes with in-class member
  initializers.
* Built-in binary literals prefixed with 0b.
* Itâ€™ll be possible to separate digits in a numeric literal with a single quote.
* Another standard attribute called [[deprecated]] will be added with the
  purpose of marking deprecated parts of the code. [/list]



clang list
http://clang.llvm.org/cxx_status.html
Tweak to certain C++ contextual conversions   N3323   Clang 3.4
Binary literals                               N3472   Clang 2.9
decltype(auto), and...                        N3638   Clang 3.3
Return type deduction for normal functions            Clang 3.4
Initialized lambda captures                   N3648   Clang 3.4
Generic lambdas                               N3649   Clang 3.4
Variable templates                            N3651   Clang 3.4
Relaxing requirements on constexpr functions  N3652   Clang 3.4
Member initializers and aggregates            N3653   Clang 3.3
Clarifying memory allocation                  N3664   Clang 3.4
[[deprecated]] attribute                      N3760   Clang 3.4
C++ Sized Deallocation                        N3778   Clang 3.4
Single quotation mark as digit separator      N3781   Clang 3.4



gcc list
https://gcc.gnu.org/projects/cxx1y.html
Tweak to certain C++ contextual conversions   N3323   4.9
Binary literals                               N3472   4.3 (GNU)
                                                      4.9 (N3472)      __cpp_binary_literals >= 201304
Return type deduction for normal functions    N3638   4.8 (N3386)
                                                      4.9 (N3638)      __cpp_decltype_auto >= 201304
Generalized lambda capture (init-capture)     N3648   4.5 (partial)
                                                      4.9 (N3648)      __cpp_init_captures >= 201304
Generic (polymorphic) lambda expressions      N3649   4.9              __cpp_generic_lambdas >= 201304
Variable templates                            N3651   5                __cpp_variable_templates >= 201304
Relaxing requirements on constexpr functions  N3652   5                __cpp_constexpr >= 201304
Member initializers and aggregates            N3653   5                __cpp_aggregate_nsdmi >= 201304
Clarifying memory allocation                  N3664   N/A
[[deprecated]] attribute                      N3760   4.9 (N3797)      __has_cpp_attribute(deprecated) >= 201309
Sized deallocation                            N3778   5                __cpp_sized_deallocation >= 201309
Single-quotation-mark as a digit separator    N3781   4.9 (N3797)      __cpp_digit_separator >= 201309



Windows ViStu list
http://blogs.msdn.com/b/vcblog/archive/2013/12/02/c-11-14-core-language-features-in-vs-2013-and-the-nov-2013-ctp.aspx
C++14 Core Language Features                  VS 2013 Nov 2013 CTP
---------------------------------------------------------------------------------
Tweaked wording for contextual conversions    No      No
Binary literals                               No      No
auto and decltype(auto) return types          No      Yes
init-captures                                 No      No [N3648?]    
Generic lambdas                               No      Partial
Variable templates                            No      No
Extended constexpr                            No      No [N3652?]    
NSDMIs for aggregates                         No      No [N3653?]    
Avoiding/fusing allocations                   No      No [N3664?]    
[[deprecated]] attributes                     No      No
Sized deallocation                            No      No
Digit separators                              No      No



TODO arrange the following asorted list...

write code snippets, test and extend booklet - for the following features

Tweak to certain C++ contextual conversions
Binary literals
decltype(auto)
Variable templates
Member initializers and aggregates
Clarifying memory allocation
[[deprecated]] attribute
Single quotation mark as digit separator
C++ Sized Deallocation



TODO check if this is already done

Initialized lambda captures / extended capturing (TODO check, is the same?)
Return type deduction for normal functions
Generic lambdas
Relaxing requirements on constexpr functions (TODO check, variable templates also contained?)

DONE
N3472 - binary literal
N3323 - Tweak to certain C++ contextual conversions

 Return type deduction for functions
 Generic lambdas
 Extended capturing in lambdas
 Revised restrictions on constexpr functions
 constexpr variable templates





    

1 New language features

    1.1 Function return type deduction
    1.2 Alternate type deduction on declaration
    1.3 Relaxed constexpr restrictions
    1.4 Variable templates
    1.5 Aggregate member initialization
    1.6 Binary literals
    1.7 Digit separators
    1.8 Generic lambdas
    1.9 Lambda capture expressions
    1.10 The attribute [[deprecated]]

2 New standard library features

    2.1 Shared mutexes and locking
    2.2 Heterogeneous lookup in associative containers
    2.3 Standard user-defined literals
    2.4 Tuple addressing via type
    2.5 Smaller library features


